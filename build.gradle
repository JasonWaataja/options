plugins {
  // To make build/libs/options-all.jar, run: gradle shadowJar
  id 'com.github.johnrengelman.shadow' version '2.0.2'
  // Disabled due to poor handling of type annotations; wait until
  // this issue is fixed: https://github.com/google/google-java-format/issues/5
  // // Code formatting with Google Java Format; defines targets "goJF" and "verJF".
  // id "com.github.sherter.google-java-format" version "0.7.1"
}

apply plugin: 'java-library'

// Checker Framework pluggable type-checking
apply from: 'gradle/checkerframework-annos-in-comments.gradle'
// To upload to Maven Central.  See file README-developers.txt .
apply from: 'gradle/mavencentral.gradle'

dependencies {
  implementation 'org.apache.commons:commons-text:1.2'

  testImplementation 'junit:junit:4.12'

  // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
  compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
}

repositories {
  mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// Turn Javadoc warnings into errors.
javadoc {
  options.addStringOption('Xwerror', '-quiet')
}

task javadocWeb(type: Javadoc) {
  source = sourceSets.main.allJava
  destinationDir = file("/cse/web/research/plumelib/options/api")
  classpath = project.sourceSets.main.compileClasspath
}

// Work around https://github.com/johnrengelman/shadow/issues/324
configurations {
  toolsJar  // tools.jar contains the Javadoc tool
}
dependencies {
  toolsJar files(org.gradle.internal.jvm.Jvm.current().toolsJar)
}
configurations.compileClasspath.extendsFrom configurations.toolsJar
